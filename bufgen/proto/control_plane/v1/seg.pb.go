// Copyright 2020 Anapaya Systems
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/control_plane/v1/seg.proto

package control_plane

import (
	crypto "github.com/scionproto/scion/pkg/proto/crypto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SegmentType int32

const (
	// Unknown segemnt type.
	SegmentType_SEGMENT_TYPE_UNSPECIFIED SegmentType = 0
	// Up segment.
	SegmentType_SEGMENT_TYPE_UP SegmentType = 1
	// Down segment.
	SegmentType_SEGMENT_TYPE_DOWN SegmentType = 2
	// Core segment.
	SegmentType_SEGMENT_TYPE_CORE SegmentType = 3
)

// Enum value maps for SegmentType.
var (
	SegmentType_name = map[int32]string{
		0: "SEGMENT_TYPE_UNSPECIFIED",
		1: "SEGMENT_TYPE_UP",
		2: "SEGMENT_TYPE_DOWN",
		3: "SEGMENT_TYPE_CORE",
	}
	SegmentType_value = map[string]int32{
		"SEGMENT_TYPE_UNSPECIFIED": 0,
		"SEGMENT_TYPE_UP":          1,
		"SEGMENT_TYPE_DOWN":        2,
		"SEGMENT_TYPE_CORE":        3,
	}
)

func (x SegmentType) Enum() *SegmentType {
	p := new(SegmentType)
	*p = x
	return p
}

func (x SegmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SegmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_control_plane_v1_seg_proto_enumTypes[0].Descriptor()
}

func (SegmentType) Type() protoreflect.EnumType {
	return &file_proto_control_plane_v1_seg_proto_enumTypes[0]
}

func (x SegmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SegmentType.Descriptor instead.
func (SegmentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{0}
}

type SegmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The source ISD-AS of the segment.
	SrcIsdAs uint64 `protobuf:"varint,1,opt,name=src_isd_as,json=srcIsdAs,proto3" json:"src_isd_as,omitempty"`
	// The destination ISD-AS of the segment.
	DstIsdAs uint64 `protobuf:"varint,2,opt,name=dst_isd_as,json=dstIsdAs,proto3" json:"dst_isd_as,omitempty"`
}

func (x *SegmentsRequest) Reset() {
	*x = SegmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsRequest) ProtoMessage() {}

func (x *SegmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsRequest.ProtoReflect.Descriptor instead.
func (*SegmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{0}
}

func (x *SegmentsRequest) GetSrcIsdAs() uint64 {
	if x != nil {
		return x.SrcIsdAs
	}
	return 0
}

func (x *SegmentsRequest) GetDstIsdAs() uint64 {
	if x != nil {
		return x.DstIsdAs
	}
	return 0
}

type SegmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mapping from path segment type to path segments. The key is the integer
	// representation of the SegmentType enum.
	Segments map[int32]*SegmentsResponse_Segments `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Deprecated list of signed revocations. Will be removed with header v1.
	DeprecatedSignedRevocations [][]byte `protobuf:"bytes,1000,rep,name=deprecated_signed_revocations,json=deprecatedSignedRevocations,proto3" json:"deprecated_signed_revocations,omitempty"`
}

func (x *SegmentsResponse) Reset() {
	*x = SegmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsResponse) ProtoMessage() {}

func (x *SegmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsResponse.ProtoReflect.Descriptor instead.
func (*SegmentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{1}
}

func (x *SegmentsResponse) GetSegments() map[int32]*SegmentsResponse_Segments {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *SegmentsResponse) GetDeprecatedSignedRevocations() [][]byte {
	if x != nil {
		return x.DeprecatedSignedRevocations
	}
	return nil
}

type SegmentsRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mapping from path segment type to path segments. The key is the integer
	// representation of the SegmentType enum.
	Segments map[int32]*SegmentsRegistrationRequest_Segments `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SegmentsRegistrationRequest) Reset() {
	*x = SegmentsRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentsRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsRegistrationRequest) ProtoMessage() {}

func (x *SegmentsRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsRegistrationRequest.ProtoReflect.Descriptor instead.
func (*SegmentsRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{2}
}

func (x *SegmentsRegistrationRequest) GetSegments() map[int32]*SegmentsRegistrationRequest_Segments {
	if x != nil {
		return x.Segments
	}
	return nil
}

type SegmentsRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SegmentsRegistrationResponse) Reset() {
	*x = SegmentsRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentsRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsRegistrationResponse) ProtoMessage() {}

func (x *SegmentsRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsRegistrationResponse.ProtoReflect.Descriptor instead.
func (*SegmentsRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{3}
}

type BeaconRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Beacon in form of a partial path segment.
	Segment *PathSegment `protobuf:"bytes,1,opt,name=segment,proto3" json:"segment,omitempty"`
}

func (x *BeaconRequest) Reset() {
	*x = BeaconRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconRequest) ProtoMessage() {}

func (x *BeaconRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconRequest.ProtoReflect.Descriptor instead.
func (*BeaconRequest) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{4}
}

func (x *BeaconRequest) GetSegment() *PathSegment {
	if x != nil {
		return x.Segment
	}
	return nil
}

type BeaconResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeaconResponse) Reset() {
	*x = BeaconResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconResponse) ProtoMessage() {}

func (x *BeaconResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconResponse.ProtoReflect.Descriptor instead.
func (*BeaconResponse) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{5}
}

type PathSegment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The encoded SegmentInformation. It is used for signature input.
	SegmentInfo []byte `protobuf:"bytes,1,opt,name=segment_info,json=segmentInfo,proto3" json:"segment_info,omitempty"`
	// Entries of ASes on the path.
	AsEntries []*ASEntry `protobuf:"bytes,2,rep,name=as_entries,json=asEntries,proto3" json:"as_entries,omitempty"`
}

func (x *PathSegment) Reset() {
	*x = PathSegment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathSegment) ProtoMessage() {}

func (x *PathSegment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathSegment.ProtoReflect.Descriptor instead.
func (*PathSegment) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{6}
}

func (x *PathSegment) GetSegmentInfo() []byte {
	if x != nil {
		return x.SegmentInfo
	}
	return nil
}

func (x *PathSegment) GetAsEntries() []*ASEntry {
	if x != nil {
		return x.AsEntries
	}
	return nil
}

type SegmentInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Segment creation time set by the originating AS. Segment expiration time
	// is computed relative to this timestamp. The timestamp is encoded as
	// number of seconds elapsed since January 1, 1970 UTC.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The 16-bit segment ID integer used for MAC computation.
	SegmentId uint32 `protobuf:"varint,2,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
}

func (x *SegmentInformation) Reset() {
	*x = SegmentInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentInformation) ProtoMessage() {}

func (x *SegmentInformation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentInformation.ProtoReflect.Descriptor instead.
func (*SegmentInformation) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{7}
}

func (x *SegmentInformation) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SegmentInformation) GetSegmentId() uint32 {
	if x != nil {
		return x.SegmentId
	}
	return 0
}

type ASEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The signed part of the AS entry. The body of the SignedMessage is the
	// serialized ASEntrySignedBody. The signature input is defined as following:
	//
	//	input(ps, i) = signed.header_and_body || associated_data(ps, i)
	//
	//	associated_data(ps, i) = ps.segment_info ||
	//	                         ps.as_entries[1].signed.header_and_body ||
	//	                         ps.as_entries[1].signed.signature ||
	//	                         ...
	//	                         ps.as_entries[i-1].signed.header_and_body ||
	//	                         ps.as_entries[i-1].signed.signature
	Signed *crypto.SignedMessage `protobuf:"bytes,1,opt,name=signed,proto3" json:"signed,omitempty"`
	// The unsigned part of the AS entry.
	Unsigned *PathSegmentUnsignedExtensions `protobuf:"bytes,2,opt,name=unsigned,proto3" json:"unsigned,omitempty"`
}

func (x *ASEntry) Reset() {
	*x = ASEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASEntry) ProtoMessage() {}

func (x *ASEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASEntry.ProtoReflect.Descriptor instead.
func (*ASEntry) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{8}
}

func (x *ASEntry) GetSigned() *crypto.SignedMessage {
	if x != nil {
		return x.Signed
	}
	return nil
}

func (x *ASEntry) GetUnsigned() *PathSegmentUnsignedExtensions {
	if x != nil {
		return x.Unsigned
	}
	return nil
}

type ASEntrySignedBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ISD-AS of the AS that created this AS entry.
	IsdAs uint64 `protobuf:"varint,1,opt,name=isd_as,json=isdAs,proto3" json:"isd_as,omitempty"`
	// ISD-AS of the downstream AS.
	NextIsdAs uint64 `protobuf:"varint,2,opt,name=next_isd_as,json=nextIsdAs,proto3" json:"next_isd_as,omitempty"`
	// The required regular hop entry.
	HopEntry *HopEntry `protobuf:"bytes,3,opt,name=hop_entry,json=hopEntry,proto3" json:"hop_entry,omitempty"`
	// Optional peer entries.
	PeerEntries []*PeerEntry `protobuf:"bytes,4,rep,name=peer_entries,json=peerEntries,proto3" json:"peer_entries,omitempty"`
	// Intra AS MTU.
	Mtu uint32 `protobuf:"varint,5,opt,name=mtu,proto3" json:"mtu,omitempty"`
	// Optional extensions.
	Extensions *PathSegmentExtensions `protobuf:"bytes,6,opt,name=extensions,proto3" json:"extensions,omitempty"`
}

func (x *ASEntrySignedBody) Reset() {
	*x = ASEntrySignedBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ASEntrySignedBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ASEntrySignedBody) ProtoMessage() {}

func (x *ASEntrySignedBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ASEntrySignedBody.ProtoReflect.Descriptor instead.
func (*ASEntrySignedBody) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{9}
}

func (x *ASEntrySignedBody) GetIsdAs() uint64 {
	if x != nil {
		return x.IsdAs
	}
	return 0
}

func (x *ASEntrySignedBody) GetNextIsdAs() uint64 {
	if x != nil {
		return x.NextIsdAs
	}
	return 0
}

func (x *ASEntrySignedBody) GetHopEntry() *HopEntry {
	if x != nil {
		return x.HopEntry
	}
	return nil
}

func (x *ASEntrySignedBody) GetPeerEntries() []*PeerEntry {
	if x != nil {
		return x.PeerEntries
	}
	return nil
}

func (x *ASEntrySignedBody) GetMtu() uint32 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *ASEntrySignedBody) GetExtensions() *PathSegmentExtensions {
	if x != nil {
		return x.Extensions
	}
	return nil
}

type HopEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Material to create the data-plane hop field.
	HopField *HopField `protobuf:"bytes,1,opt,name=hop_field,json=hopField,proto3" json:"hop_field,omitempty"`
	// MTU on the ingress link.
	IngressMtu uint32 `protobuf:"varint,2,opt,name=ingress_mtu,json=ingressMtu,proto3" json:"ingress_mtu,omitempty"`
}

func (x *HopEntry) Reset() {
	*x = HopEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HopEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HopEntry) ProtoMessage() {}

func (x *HopEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HopEntry.ProtoReflect.Descriptor instead.
func (*HopEntry) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{10}
}

func (x *HopEntry) GetHopField() *HopField {
	if x != nil {
		return x.HopField
	}
	return nil
}

func (x *HopEntry) GetIngressMtu() uint32 {
	if x != nil {
		return x.IngressMtu
	}
	return 0
}

type PeerEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ISD-AS of peer AS. This is used to match peering segments during path
	// construction.
	PeerIsdAs uint64 `protobuf:"varint,1,opt,name=peer_isd_as,json=peerIsdAs,proto3" json:"peer_isd_as,omitempty"`
	// Remote peer interface identifier. This is used to match peering segments
	// during path construction.
	PeerInterface uint64 `protobuf:"varint,2,opt,name=peer_interface,json=peerInterface,proto3" json:"peer_interface,omitempty"`
	// MTU on the peering link.
	PeerMtu uint32 `protobuf:"varint,3,opt,name=peer_mtu,json=peerMtu,proto3" json:"peer_mtu,omitempty"`
	// Material to create the data-plane hop field
	HopField *HopField `protobuf:"bytes,4,opt,name=hop_field,json=hopField,proto3" json:"hop_field,omitempty"`
}

func (x *PeerEntry) Reset() {
	*x = PeerEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerEntry) ProtoMessage() {}

func (x *PeerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerEntry.ProtoReflect.Descriptor instead.
func (*PeerEntry) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{11}
}

func (x *PeerEntry) GetPeerIsdAs() uint64 {
	if x != nil {
		return x.PeerIsdAs
	}
	return 0
}

func (x *PeerEntry) GetPeerInterface() uint64 {
	if x != nil {
		return x.PeerInterface
	}
	return 0
}

func (x *PeerEntry) GetPeerMtu() uint32 {
	if x != nil {
		return x.PeerMtu
	}
	return 0
}

func (x *PeerEntry) GetHopField() *HopField {
	if x != nil {
		return x.HopField
	}
	return nil
}

type HopField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ingress interface identifier.
	Ingress uint64 `protobuf:"varint,1,opt,name=ingress,proto3" json:"ingress,omitempty"`
	// Egress interface identifier.
	Egress uint64 `protobuf:"varint,2,opt,name=egress,proto3" json:"egress,omitempty"`
	// 8-bit encoded expiration offset relative to the segment creation
	// timestamp.
	ExpTime uint32 `protobuf:"varint,3,opt,name=exp_time,json=expTime,proto3" json:"exp_time,omitempty"`
	// MAC used in the dataplane to verify the hop field.
	Mac []byte `protobuf:"bytes,4,opt,name=mac,proto3" json:"mac,omitempty"`
}

func (x *HopField) Reset() {
	*x = HopField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HopField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HopField) ProtoMessage() {}

func (x *HopField) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HopField.ProtoReflect.Descriptor instead.
func (*HopField) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{12}
}

func (x *HopField) GetIngress() uint64 {
	if x != nil {
		return x.Ingress
	}
	return 0
}

func (x *HopField) GetEgress() uint64 {
	if x != nil {
		return x.Egress
	}
	return 0
}

func (x *HopField) GetExpTime() uint32 {
	if x != nil {
		return x.ExpTime
	}
	return 0
}

func (x *HopField) GetMac() []byte {
	if x != nil {
		return x.Mac
	}
	return nil
}

type SegmentsResponse_Segments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of path segments.
	Segments []*PathSegment `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
}

func (x *SegmentsResponse_Segments) Reset() {
	*x = SegmentsResponse_Segments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentsResponse_Segments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsResponse_Segments) ProtoMessage() {}

func (x *SegmentsResponse_Segments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsResponse_Segments.ProtoReflect.Descriptor instead.
func (*SegmentsResponse_Segments) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SegmentsResponse_Segments) GetSegments() []*PathSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type SegmentsRegistrationRequest_Segments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of path segments.
	Segments []*PathSegment `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
}

func (x *SegmentsRegistrationRequest_Segments) Reset() {
	*x = SegmentsRegistrationRequest_Segments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_control_plane_v1_seg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentsRegistrationRequest_Segments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsRegistrationRequest_Segments) ProtoMessage() {}

func (x *SegmentsRegistrationRequest_Segments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_control_plane_v1_seg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsRegistrationRequest_Segments.ProtoReflect.Descriptor instead.
func (*SegmentsRegistrationRequest_Segments) Descriptor() ([]byte, []int) {
	return file_proto_control_plane_v1_seg_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SegmentsRegistrationRequest_Segments) GetSegments() []*PathSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

var File_proto_control_plane_v1_seg_proto protoreflect.FileDescriptor

var file_proto_control_plane_v1_seg_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x2b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x65, 0x67, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4d, 0x0a, 0x0f, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x72, 0x63, 0x5f,
	0x69, 0x73, 0x64, 0x5f, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x72,
	0x63, 0x49, 0x73, 0x64, 0x41, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x73, 0x74, 0x5f, 0x69, 0x73,
	0x64, 0x5f, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x73, 0x74, 0x49,
	0x73, 0x64, 0x41, 0x73, 0x22, 0xe8, 0x02, 0x0a, 0x10, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x08, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a,
	0x1d, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xe8,
	0x07, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x1b, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x4b, 0x0a, 0x08, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3f,
	0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0x6e, 0x0a, 0x0d, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc4, 0x02, 0x0a, 0x1b, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x5d, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x4b,
	0x0a, 0x08, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x79, 0x0a, 0x0d, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x52,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x0d, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x70, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x68,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x0a, 0x61, 0x73,
	0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x53, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x12, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x94, 0x01,
	0x0a, 0x07, 0x41, 0x53, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x12, 0x51, 0x0a, 0x08, 0x75, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74,
	0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x08, 0x75, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x22, 0xb0, 0x02, 0x0a, 0x11, 0x41, 0x53, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x64, 0x5f, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x73, 0x64, 0x41,
	0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x73, 0x64, 0x5f, 0x61, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x49, 0x73, 0x64, 0x41,
	0x73, 0x12, 0x3d, 0x0a, 0x09, 0x68, 0x6f, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f,
	0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x68, 0x6f, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x44, 0x0a, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x74, 0x75, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12, 0x4d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0a, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6a, 0x0a, 0x08, 0x48, 0x6f, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x09, 0x68, 0x6f, 0x70, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x6f, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x68, 0x6f, 0x70, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x74,
	0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x4d, 0x74, 0x75, 0x22, 0xac, 0x01, 0x0a, 0x09, 0x50, 0x65, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x64, 0x5f, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x65, 0x65, 0x72, 0x49, 0x73, 0x64, 0x41,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x65, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x6d, 0x74, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72,
	0x4d, 0x74, 0x75, 0x12, 0x3d, 0x0a, 0x09, 0x68, 0x6f, 0x70, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x6f, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x68, 0x6f, 0x70, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0x69, 0x0a, 0x08, 0x48, 0x6f, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x65, 0x78, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x61, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x2a, 0x6e, 0x0a,
	0x0b, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18,
	0x53, 0x45, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45,
	0x47, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x45, 0x47, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x47, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x52, 0x45, 0x10, 0x03, 0x32, 0x77, 0x0a,
	0x14, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5f, 0x0a, 0x08, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xa2, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x73, 0x0a, 0x16, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x06, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x63, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x69, 0x6f, 0x6e, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_control_plane_v1_seg_proto_rawDescOnce sync.Once
	file_proto_control_plane_v1_seg_proto_rawDescData = file_proto_control_plane_v1_seg_proto_rawDesc
)

func file_proto_control_plane_v1_seg_proto_rawDescGZIP() []byte {
	file_proto_control_plane_v1_seg_proto_rawDescOnce.Do(func() {
		file_proto_control_plane_v1_seg_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_control_plane_v1_seg_proto_rawDescData)
	})
	return file_proto_control_plane_v1_seg_proto_rawDescData
}

var file_proto_control_plane_v1_seg_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_control_plane_v1_seg_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_proto_control_plane_v1_seg_proto_goTypes = []interface{}{
	(SegmentType)(0),                             // 0: proto.control_plane.v1.SegmentType
	(*SegmentsRequest)(nil),                      // 1: proto.control_plane.v1.SegmentsRequest
	(*SegmentsResponse)(nil),                     // 2: proto.control_plane.v1.SegmentsResponse
	(*SegmentsRegistrationRequest)(nil),          // 3: proto.control_plane.v1.SegmentsRegistrationRequest
	(*SegmentsRegistrationResponse)(nil),         // 4: proto.control_plane.v1.SegmentsRegistrationResponse
	(*BeaconRequest)(nil),                        // 5: proto.control_plane.v1.BeaconRequest
	(*BeaconResponse)(nil),                       // 6: proto.control_plane.v1.BeaconResponse
	(*PathSegment)(nil),                          // 7: proto.control_plane.v1.PathSegment
	(*SegmentInformation)(nil),                   // 8: proto.control_plane.v1.SegmentInformation
	(*ASEntry)(nil),                              // 9: proto.control_plane.v1.ASEntry
	(*ASEntrySignedBody)(nil),                    // 10: proto.control_plane.v1.ASEntrySignedBody
	(*HopEntry)(nil),                             // 11: proto.control_plane.v1.HopEntry
	(*PeerEntry)(nil),                            // 12: proto.control_plane.v1.PeerEntry
	(*HopField)(nil),                             // 13: proto.control_plane.v1.HopField
	(*SegmentsResponse_Segments)(nil),            // 14: proto.control_plane.v1.SegmentsResponse.Segments
	nil,                                          // 15: proto.control_plane.v1.SegmentsResponse.SegmentsEntry
	(*SegmentsRegistrationRequest_Segments)(nil), // 16: proto.control_plane.v1.SegmentsRegistrationRequest.Segments
	nil,                                   // 17: proto.control_plane.v1.SegmentsRegistrationRequest.SegmentsEntry
	(*crypto.SignedMessage)(nil),          // 18: proto.crypto.v1.SignedMessage
	(*PathSegmentUnsignedExtensions)(nil), // 19: proto.control_plane.v1.PathSegmentUnsignedExtensions
	(*PathSegmentExtensions)(nil),         // 20: proto.control_plane.v1.PathSegmentExtensions
}
var file_proto_control_plane_v1_seg_proto_depIdxs = []int32{
	15, // 0: proto.control_plane.v1.SegmentsResponse.segments:type_name -> proto.control_plane.v1.SegmentsResponse.SegmentsEntry
	17, // 1: proto.control_plane.v1.SegmentsRegistrationRequest.segments:type_name -> proto.control_plane.v1.SegmentsRegistrationRequest.SegmentsEntry
	7,  // 2: proto.control_plane.v1.BeaconRequest.segment:type_name -> proto.control_plane.v1.PathSegment
	9,  // 3: proto.control_plane.v1.PathSegment.as_entries:type_name -> proto.control_plane.v1.ASEntry
	18, // 4: proto.control_plane.v1.ASEntry.signed:type_name -> proto.crypto.v1.SignedMessage
	19, // 5: proto.control_plane.v1.ASEntry.unsigned:type_name -> proto.control_plane.v1.PathSegmentUnsignedExtensions
	11, // 6: proto.control_plane.v1.ASEntrySignedBody.hop_entry:type_name -> proto.control_plane.v1.HopEntry
	12, // 7: proto.control_plane.v1.ASEntrySignedBody.peer_entries:type_name -> proto.control_plane.v1.PeerEntry
	20, // 8: proto.control_plane.v1.ASEntrySignedBody.extensions:type_name -> proto.control_plane.v1.PathSegmentExtensions
	13, // 9: proto.control_plane.v1.HopEntry.hop_field:type_name -> proto.control_plane.v1.HopField
	13, // 10: proto.control_plane.v1.PeerEntry.hop_field:type_name -> proto.control_plane.v1.HopField
	7,  // 11: proto.control_plane.v1.SegmentsResponse.Segments.segments:type_name -> proto.control_plane.v1.PathSegment
	14, // 12: proto.control_plane.v1.SegmentsResponse.SegmentsEntry.value:type_name -> proto.control_plane.v1.SegmentsResponse.Segments
	7,  // 13: proto.control_plane.v1.SegmentsRegistrationRequest.Segments.segments:type_name -> proto.control_plane.v1.PathSegment
	16, // 14: proto.control_plane.v1.SegmentsRegistrationRequest.SegmentsEntry.value:type_name -> proto.control_plane.v1.SegmentsRegistrationRequest.Segments
	1,  // 15: proto.control_plane.v1.SegmentLookupService.Segments:input_type -> proto.control_plane.v1.SegmentsRequest
	3,  // 16: proto.control_plane.v1.SegmentRegistrationService.SegmentsRegistration:input_type -> proto.control_plane.v1.SegmentsRegistrationRequest
	5,  // 17: proto.control_plane.v1.SegmentCreationService.Beacon:input_type -> proto.control_plane.v1.BeaconRequest
	2,  // 18: proto.control_plane.v1.SegmentLookupService.Segments:output_type -> proto.control_plane.v1.SegmentsResponse
	4,  // 19: proto.control_plane.v1.SegmentRegistrationService.SegmentsRegistration:output_type -> proto.control_plane.v1.SegmentsRegistrationResponse
	6,  // 20: proto.control_plane.v1.SegmentCreationService.Beacon:output_type -> proto.control_plane.v1.BeaconResponse
	18, // [18:21] is the sub-list for method output_type
	15, // [15:18] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_control_plane_v1_seg_proto_init() }
func file_proto_control_plane_v1_seg_proto_init() {
	if File_proto_control_plane_v1_seg_proto != nil {
		return
	}
	file_proto_control_plane_v1_seg_extensions_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_control_plane_v1_seg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentsRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentsRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathSegment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ASEntrySignedBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HopEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HopField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentsResponse_Segments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_control_plane_v1_seg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentsRegistrationRequest_Segments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_control_plane_v1_seg_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_control_plane_v1_seg_proto_goTypes,
		DependencyIndexes: file_proto_control_plane_v1_seg_proto_depIdxs,
		EnumInfos:         file_proto_control_plane_v1_seg_proto_enumTypes,
		MessageInfos:      file_proto_control_plane_v1_seg_proto_msgTypes,
	}.Build()
	File_proto_control_plane_v1_seg_proto = out.File
	file_proto_control_plane_v1_seg_proto_rawDesc = nil
	file_proto_control_plane_v1_seg_proto_goTypes = nil
	file_proto_control_plane_v1_seg_proto_depIdxs = nil
}
