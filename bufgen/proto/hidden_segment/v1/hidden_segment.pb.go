// Copyright 2020 Anapaya Systems
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/hidden_segment/v1/hidden_segment.proto

package hidden_segment

import (
	control_plane "github.com/scionproto/scion/pkg/proto/control_plane"
	crypto "github.com/scionproto/scion/pkg/proto/crypto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Segments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of path segments.
	Segments []*control_plane.PathSegment `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
}

func (x *Segments) Reset() {
	*x = Segments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segments) ProtoMessage() {}

func (x *Segments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segments.ProtoReflect.Descriptor instead.
func (*Segments) Descriptor() ([]byte, []int) {
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP(), []int{0}
}

func (x *Segments) GetSegments() []*control_plane.PathSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type HiddenSegmentRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The signed hidden segment registration request. The body of the
	// SignedMessage is the serialized HiddenSegmentRegistrationRequestBody.
	SignedRequest *crypto.SignedMessage `protobuf:"bytes,1,opt,name=signed_request,json=signedRequest,proto3" json:"signed_request,omitempty"`
}

func (x *HiddenSegmentRegistrationRequest) Reset() {
	*x = HiddenSegmentRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiddenSegmentRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiddenSegmentRegistrationRequest) ProtoMessage() {}

func (x *HiddenSegmentRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiddenSegmentRegistrationRequest.ProtoReflect.Descriptor instead.
func (*HiddenSegmentRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP(), []int{1}
}

func (x *HiddenSegmentRegistrationRequest) GetSignedRequest() *crypto.SignedMessage {
	if x != nil {
		return x.SignedRequest
	}
	return nil
}

type HiddenSegmentRegistrationRequestBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mapping from path segment type to path segments. The key is the integer
	// representation of the control_plane.v1.SegmentType enum.
	Segments map[int32]*Segments `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// GroupID is the group ID to which these segments should be registered.
	GroupId uint64 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *HiddenSegmentRegistrationRequestBody) Reset() {
	*x = HiddenSegmentRegistrationRequestBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiddenSegmentRegistrationRequestBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiddenSegmentRegistrationRequestBody) ProtoMessage() {}

func (x *HiddenSegmentRegistrationRequestBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiddenSegmentRegistrationRequestBody.ProtoReflect.Descriptor instead.
func (*HiddenSegmentRegistrationRequestBody) Descriptor() ([]byte, []int) {
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP(), []int{2}
}

func (x *HiddenSegmentRegistrationRequestBody) GetSegments() map[int32]*Segments {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *HiddenSegmentRegistrationRequestBody) GetGroupId() uint64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type HiddenSegmentRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HiddenSegmentRegistrationResponse) Reset() {
	*x = HiddenSegmentRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiddenSegmentRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiddenSegmentRegistrationResponse) ProtoMessage() {}

func (x *HiddenSegmentRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiddenSegmentRegistrationResponse.ProtoReflect.Descriptor instead.
func (*HiddenSegmentRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP(), []int{3}
}

type HiddenSegmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Hidden path group IDs for which a hidden segment is requested.
	GroupIds []uint64 `protobuf:"varint,1,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	// The destination ISD-AS of the segment.
	DstIsdAs uint64 `protobuf:"varint,2,opt,name=dst_isd_as,json=dstIsdAs,proto3" json:"dst_isd_as,omitempty"`
}

func (x *HiddenSegmentsRequest) Reset() {
	*x = HiddenSegmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiddenSegmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiddenSegmentsRequest) ProtoMessage() {}

func (x *HiddenSegmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiddenSegmentsRequest.ProtoReflect.Descriptor instead.
func (*HiddenSegmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP(), []int{4}
}

func (x *HiddenSegmentsRequest) GetGroupIds() []uint64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *HiddenSegmentsRequest) GetDstIsdAs() uint64 {
	if x != nil {
		return x.DstIsdAs
	}
	return 0
}

type HiddenSegmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mapping from path segment type to path segments. The key is the integer
	// representation of the control_plane.v1.SegmentType enum.
	Segments map[int32]*Segments `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HiddenSegmentsResponse) Reset() {
	*x = HiddenSegmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HiddenSegmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiddenSegmentsResponse) ProtoMessage() {}

func (x *HiddenSegmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiddenSegmentsResponse.ProtoReflect.Descriptor instead.
func (*HiddenSegmentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP(), []int{5}
}

func (x *HiddenSegmentsResponse) GetSegments() map[int32]*Segments {
	if x != nil {
		return x.Segments
	}
	return nil
}

type AuthoritativeHiddenSegmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The signed hidden segment request. The body of the SignedMessage is the
	// serialized HiddenSegmentRegistrationRequestBody.
	SignedRequest *crypto.SignedMessage `protobuf:"bytes,1,opt,name=signed_request,json=signedRequest,proto3" json:"signed_request,omitempty"`
}

func (x *AuthoritativeHiddenSegmentsRequest) Reset() {
	*x = AuthoritativeHiddenSegmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthoritativeHiddenSegmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthoritativeHiddenSegmentsRequest) ProtoMessage() {}

func (x *AuthoritativeHiddenSegmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthoritativeHiddenSegmentsRequest.ProtoReflect.Descriptor instead.
func (*AuthoritativeHiddenSegmentsRequest) Descriptor() ([]byte, []int) {
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP(), []int{6}
}

func (x *AuthoritativeHiddenSegmentsRequest) GetSignedRequest() *crypto.SignedMessage {
	if x != nil {
		return x.SignedRequest
	}
	return nil
}

type AuthoritativeHiddenSegmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mapping from path segment type to path segments. The key is the integer
	// representation of the control_plane.v1.SegmentType enum.
	Segments map[int32]*Segments `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AuthoritativeHiddenSegmentsResponse) Reset() {
	*x = AuthoritativeHiddenSegmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthoritativeHiddenSegmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthoritativeHiddenSegmentsResponse) ProtoMessage() {}

func (x *AuthoritativeHiddenSegmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthoritativeHiddenSegmentsResponse.ProtoReflect.Descriptor instead.
func (*AuthoritativeHiddenSegmentsResponse) Descriptor() ([]byte, []int) {
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP(), []int{7}
}

func (x *AuthoritativeHiddenSegmentsResponse) GetSegments() map[int32]*Segments {
	if x != nil {
		return x.Segments
	}
	return nil
}

var File_proto_hidden_segment_v1_hidden_segment_proto protoreflect.FileDescriptor

var file_proto_hidden_segment_v1_hidden_segment_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x08, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x74, 0x68, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x69, 0x0a, 0x20, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x8a, 0x02, 0x0a, 0x24, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x67, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x5e, 0x0a, 0x0d,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x23, 0x0a, 0x21,
	0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x52, 0x0a, 0x15, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x0a, 0x64, 0x73, 0x74, 0x5f, 0x69,
	0x73, 0x64, 0x5f, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x73, 0x74,
	0x49, 0x73, 0x64, 0x41, 0x73, 0x22, 0xd3, 0x01, 0x0a, 0x16, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x5e, 0x0a, 0x0d, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6b, 0x0a, 0x22, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xed, 0x01, 0x0a, 0x23, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x5e, 0x0a, 0x0d, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xb9, 0x01, 0x0a, 0x20, 0x48, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x94, 0x01,
	0x0a, 0x19, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x32, 0x91, 0x01, 0x0a, 0x1a, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0e, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xc6, 0x01, 0x0a, 0x27, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x1b, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x48, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x63, 0x69, 0x6f, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x69, 0x6f, 0x6e,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_hidden_segment_v1_hidden_segment_proto_rawDescOnce sync.Once
	file_proto_hidden_segment_v1_hidden_segment_proto_rawDescData = file_proto_hidden_segment_v1_hidden_segment_proto_rawDesc
)

func file_proto_hidden_segment_v1_hidden_segment_proto_rawDescGZIP() []byte {
	file_proto_hidden_segment_v1_hidden_segment_proto_rawDescOnce.Do(func() {
		file_proto_hidden_segment_v1_hidden_segment_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_hidden_segment_v1_hidden_segment_proto_rawDescData)
	})
	return file_proto_hidden_segment_v1_hidden_segment_proto_rawDescData
}

var file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_hidden_segment_v1_hidden_segment_proto_goTypes = []interface{}{
	(*Segments)(nil),                             // 0: proto.hidden_segment.v1.Segments
	(*HiddenSegmentRegistrationRequest)(nil),     // 1: proto.hidden_segment.v1.HiddenSegmentRegistrationRequest
	(*HiddenSegmentRegistrationRequestBody)(nil), // 2: proto.hidden_segment.v1.HiddenSegmentRegistrationRequestBody
	(*HiddenSegmentRegistrationResponse)(nil),    // 3: proto.hidden_segment.v1.HiddenSegmentRegistrationResponse
	(*HiddenSegmentsRequest)(nil),                // 4: proto.hidden_segment.v1.HiddenSegmentsRequest
	(*HiddenSegmentsResponse)(nil),               // 5: proto.hidden_segment.v1.HiddenSegmentsResponse
	(*AuthoritativeHiddenSegmentsRequest)(nil),   // 6: proto.hidden_segment.v1.AuthoritativeHiddenSegmentsRequest
	(*AuthoritativeHiddenSegmentsResponse)(nil),  // 7: proto.hidden_segment.v1.AuthoritativeHiddenSegmentsResponse
	nil,                               // 8: proto.hidden_segment.v1.HiddenSegmentRegistrationRequestBody.SegmentsEntry
	nil,                               // 9: proto.hidden_segment.v1.HiddenSegmentsResponse.SegmentsEntry
	nil,                               // 10: proto.hidden_segment.v1.AuthoritativeHiddenSegmentsResponse.SegmentsEntry
	(*control_plane.PathSegment)(nil), // 11: proto.control_plane.v1.PathSegment
	(*crypto.SignedMessage)(nil),      // 12: proto.crypto.v1.SignedMessage
}
var file_proto_hidden_segment_v1_hidden_segment_proto_depIdxs = []int32{
	11, // 0: proto.hidden_segment.v1.Segments.segments:type_name -> proto.control_plane.v1.PathSegment
	12, // 1: proto.hidden_segment.v1.HiddenSegmentRegistrationRequest.signed_request:type_name -> proto.crypto.v1.SignedMessage
	8,  // 2: proto.hidden_segment.v1.HiddenSegmentRegistrationRequestBody.segments:type_name -> proto.hidden_segment.v1.HiddenSegmentRegistrationRequestBody.SegmentsEntry
	9,  // 3: proto.hidden_segment.v1.HiddenSegmentsResponse.segments:type_name -> proto.hidden_segment.v1.HiddenSegmentsResponse.SegmentsEntry
	12, // 4: proto.hidden_segment.v1.AuthoritativeHiddenSegmentsRequest.signed_request:type_name -> proto.crypto.v1.SignedMessage
	10, // 5: proto.hidden_segment.v1.AuthoritativeHiddenSegmentsResponse.segments:type_name -> proto.hidden_segment.v1.AuthoritativeHiddenSegmentsResponse.SegmentsEntry
	0,  // 6: proto.hidden_segment.v1.HiddenSegmentRegistrationRequestBody.SegmentsEntry.value:type_name -> proto.hidden_segment.v1.Segments
	0,  // 7: proto.hidden_segment.v1.HiddenSegmentsResponse.SegmentsEntry.value:type_name -> proto.hidden_segment.v1.Segments
	0,  // 8: proto.hidden_segment.v1.AuthoritativeHiddenSegmentsResponse.SegmentsEntry.value:type_name -> proto.hidden_segment.v1.Segments
	1,  // 9: proto.hidden_segment.v1.HiddenSegmentRegistrationService.HiddenSegmentRegistration:input_type -> proto.hidden_segment.v1.HiddenSegmentRegistrationRequest
	4,  // 10: proto.hidden_segment.v1.HiddenSegmentLookupService.HiddenSegments:input_type -> proto.hidden_segment.v1.HiddenSegmentsRequest
	6,  // 11: proto.hidden_segment.v1.AuthoritativeHiddenSegmentLookupService.AuthoritativeHiddenSegments:input_type -> proto.hidden_segment.v1.AuthoritativeHiddenSegmentsRequest
	3,  // 12: proto.hidden_segment.v1.HiddenSegmentRegistrationService.HiddenSegmentRegistration:output_type -> proto.hidden_segment.v1.HiddenSegmentRegistrationResponse
	5,  // 13: proto.hidden_segment.v1.HiddenSegmentLookupService.HiddenSegments:output_type -> proto.hidden_segment.v1.HiddenSegmentsResponse
	7,  // 14: proto.hidden_segment.v1.AuthoritativeHiddenSegmentLookupService.AuthoritativeHiddenSegments:output_type -> proto.hidden_segment.v1.AuthoritativeHiddenSegmentsResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_hidden_segment_v1_hidden_segment_proto_init() }
func file_proto_hidden_segment_v1_hidden_segment_proto_init() {
	if File_proto_hidden_segment_v1_hidden_segment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiddenSegmentRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiddenSegmentRegistrationRequestBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiddenSegmentRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiddenSegmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HiddenSegmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthoritativeHiddenSegmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthoritativeHiddenSegmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_hidden_segment_v1_hidden_segment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_hidden_segment_v1_hidden_segment_proto_goTypes,
		DependencyIndexes: file_proto_hidden_segment_v1_hidden_segment_proto_depIdxs,
		MessageInfos:      file_proto_hidden_segment_v1_hidden_segment_proto_msgTypes,
	}.Build()
	File_proto_hidden_segment_v1_hidden_segment_proto = out.File
	file_proto_hidden_segment_v1_hidden_segment_proto_rawDesc = nil
	file_proto_hidden_segment_v1_hidden_segment_proto_goTypes = nil
	file_proto_hidden_segment_v1_hidden_segment_proto_depIdxs = nil
}
